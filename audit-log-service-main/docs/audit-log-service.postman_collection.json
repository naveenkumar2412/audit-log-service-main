{
  "info": {
    "name": "Audit Log Service API",
    "description": "Complete API collection for the Audit Log Service with examples for all endpoints including authentication, health checks, and audit log operations.",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:9025",
      "type": "string"
    },
    {
      "key": "api_key",
      "value": "your-api-key-1",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "tenant_id",
      "value": "tenant-123",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "user-456",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Basic health check endpoint to verify the service is running"
          },
          "response": [
            {
              "name": "Healthy Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/health",
                  "host": ["{{base_url}}"],
                  "path": ["health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2025-06-14T10:30:00Z\",\n  \"version\": \"1.0.0\",\n  \"uptime\": \"2h30m15s\"\n}"
            }
          ]
        },
        {
          "name": "Readiness Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/ready",
              "host": ["{{base_url}}"],
              "path": ["ready"]
            },
            "description": "Readiness check to verify all dependencies (database, etc.) are available"
          }
        },
        {
          "name": "Liveness Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/live",
              "host": ["{{base_url}}"],
              "path": ["live"]
            },
            "description": "Liveness check for Kubernetes deployment"
          }
        }
      ],
      "description": "Health check endpoints for monitoring and deployment"
    },
    {
      "name": "Audit Logs",
      "item": [
        {
          "name": "Create Audit Log (JWT Auth)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tenant_id\": \"{{tenant_id}}\",\n  \"user_id\": \"{{user_id}}\",\n  \"resource\": \"users\",\n  \"event\": \"user_created\",\n  \"method\": \"POST\",\n  \"ip\": \"192.168.1.100\",\n  \"status\": \"pending\",\n  \"environment\": \"production\",\n  \"data\": {\n    \"user_email\": \"john.doe@example.com\",\n    \"user_role\": \"admin\",\n    \"created_by\": \"system\"\n  },\n  \"meta\": {\n    \"request_id\": \"req-12345\",\n    \"session_id\": \"sess-67890\",\n    \"client_version\": \"1.2.3\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/audit",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "audit"]
            },
            "description": "Create a new audit log entry using JWT authentication"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"tenant_id\": \"tenant-123\",\n  \"user_id\": \"user-456\",\n  \"resource\": \"users\",\n  \"event\": \"user_created\",\n  \"method\": \"POST\",\n  \"ip\": \"192.168.1.100\",\n  \"environment\": \"production\",\n  \"data\": {\n    \"user_email\": \"john.doe@example.com\",\n    \"user_role\": \"admin\"\n  }\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/audit",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "audit"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": \"01234567-89ab-cdef-0123-456789abcdef\",\n  \"tenant_id\": \"tenant-123\",\n  \"user_id\": \"user-456\",\n  \"resource\": \"users\",\n  \"event\": \"user_created\",\n  \"method\": \"POST\",\n  \"ip\": \"192.168.1.100\",\n  \"environment\": \"production\",\n  \"data\": {\n    \"user_email\": \"john.doe@example.com\",\n    \"user_role\": \"admin\"\n  },\n  \"meta\": {\n    \"request_id\": \"req-12345\",\n    \"session_id\": \"sess-67890\"\n  },\n  \"timestamp\": \"2025-06-14T10:30:00Z\",\n  \"created_at\": \"2025-06-14T10:30:00Z\",\n  \"updated_at\": \"2025-06-14T10:30:00Z\"\n}"
            }
          ]
        },
        {
          "name": "Create Audit Log (API Key Auth)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tenant_id\": \"{{tenant_id}}\",\n  \"user_id\": \"{{user_id}}\",\n  \"resource\": \"orders\",\n  \"event\": \"order_updated\",\n  \"method\": \"PUT\",\n  \"ip\": \"10.0.0.25\",\n  \"environment\": \"staging\",\n  \"data\": {\n    \"order_id\": \"order-789\",\n    \"status\": \"shipped\",\n    \"updated_fields\": [\"status\", \"tracking_number\"]\n  },\n  \"meta\": {\n    \"api_version\": \"v2\",\n    \"source\": \"mobile_app\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/audit",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "audit"]
            },
            "description": "Create a new audit log entry using API key authentication"
          }
        },
        {
          "name": "List Audit Logs - Basic",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/audit?limit=10&offset=0",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "audit"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            },
            "description": "Get a basic list of audit logs with pagination"
          }
        },
        {
          "name": "List Audit Logs - Filtered",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/audit?tenant_id={{tenant_id}}&user_id={{user_id}}&resource=users&event=user_created&method=POST&status=completed&environment=production&start_date=2025-06-01T00:00:00Z&end_date=2025-06-14T23:59:59Z&limit=50&offset=0",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "audit"],
              "query": [
                {
                  "key": "tenant_id",
                  "value": "{{tenant_id}}"
                },
                {
                  "key": "user_id",
                  "value": "{{user_id}}"
                },
                {
                  "key": "resource",
                  "value": "users"
                },
                {
                  "key": "event",
                  "value": "user_created"
                },
                {
                  "key": "method",
                  "value": "POST"
                },
                {
                  "key": "status",
                  "value": "completed"
                },
                {
                  "key": "environment",
                  "value": "production"
                },
                {
                  "key": "start_date",
                  "value": "2025-06-01T00:00:00Z"
                },
                {
                  "key": "end_date",
                  "value": "2025-06-14T23:59:59Z"
                },
                {
                  "key": "limit",
                  "value": "50"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            },
            "description": "Get filtered audit logs with multiple query parameters"
          },
          "response": [
            {
              "name": "Filtered Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/audit?tenant_id=tenant-123&limit=10",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "audit"],
                  "query": [
                    {
                      "key": "tenant_id",
                      "value": "tenant-123"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"01234567-89ab-cdef-0123-456789abcdef\",\n      \"tenant_id\": \"tenant-123\",\n      \"user_id\": \"user-456\",\n      \"resource\": \"users\",\n      \"event\": \"user_created\",\n      \"method\": \"POST\",\n      \"ip\": \"192.168.1.100\",\n      \"environment\": \"production\",\n      \"data\": {\n        \"user_email\": \"john.doe@example.com\",\n        \"user_role\": \"admin\"\n      },\n      \"meta\": {\n        \"request_id\": \"req-12345\"\n      },\n      \"timestamp\": \"2025-06-14T10:30:00Z\",\n      \"created_at\": \"2025-06-14T10:30:00Z\",\n      \"updated_at\": \"2025-06-14T10:30:00Z\"\n    }\n  ],\n  \"total\": 1,\n  \"limit\": 10,\n  \"offset\": 0,\n  \"has_more\": false\n}"
            }
          ]
        },
        {
          "name": "Get Audit Log by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/audit/01234567-89ab-cdef-0123-456789abcdef",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "v1",
                "audit",
                "01234567-89ab-cdef-0123-456789abcdef"
              ]
            },
            "description": "Get a specific audit log entry by its ID"
          }
        },
        {
          "name": "Get Audit Log Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/audit/stats?tenant_id={{tenant_id}}&start_date=2025-06-01T00:00:00Z&end_date=2025-06-14T23:59:59Z",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "audit", "stats"],
              "query": [
                {
                  "key": "tenant_id",
                  "value": "{{tenant_id}}"
                },
                {
                  "key": "start_date",
                  "value": "2025-06-01T00:00:00Z"
                },
                {
                  "key": "end_date",
                  "value": "2025-06-14T23:59:59Z"
                }
              ]
            },
            "description": "Get statistics for audit logs within a date range"
          },
          "response": [
            {
              "name": "Statistics Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/audit/stats?tenant_id=tenant-123&start_date=2025-06-01T00:00:00Z&end_date=2025-06-14T23:59:59Z",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "audit", "stats"],
                  "query": [
                    {
                      "key": "tenant_id",
                      "value": "tenant-123"
                    },
                    {
                      "key": "start_date",
                      "value": "2025-06-01T00:00:00Z"
                    },
                    {
                      "key": "end_date",
                      "value": "2025-06-14T23:59:59Z"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"total_logs\": 1250,\n  \"date_range\": {\n    \"start\": \"2025-06-01T00:00:00Z\",\n    \"end\": \"2025-06-14T23:59:59Z\"\n  },\n  \"breakdown_by_resource\": {\n    \"users\": 450,\n    \"orders\": 380,\n    \"products\": 290,\n    \"payments\": 130\n  },\n  \"breakdown_by_event\": {\n    \"created\": 520,\n    \"updated\": 430,\n    \"deleted\": 180,\n    \"viewed\": 120\n  },\n  \"breakdown_by_method\": {\n    \"GET\": 320,\n    \"POST\": 520,\n    \"PUT\": 280,\n    \"DELETE\": 130\n  },\n  \"breakdown_by_environment\": {\n    \"production\": 800,\n    \"staging\": 350,\n    \"development\": 100\n  }\n}"
            }
          ]
        },
        {
          "name": "Update Audit Log Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/audit/{{audit_log_id}}/status",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "v1",
                "audit",
                "{{audit_log_id}}",
                "status"
              ]
            },
            "description": "Update the status of a specific audit log entry"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"completed\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/audit/01234567-89ab-cdef-0123-456789abcdef/status",
                  "host": ["{{base_url}}"],
                  "path": [
                    "api",
                    "v1",
                    "audit",
                    "01234567-89ab-cdef-0123-456789abcdef",
                    "status"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Audit log status updated successfully\",\n  \"id\": \"01234567-89ab-cdef-0123-456789abcdef\",\n  \"status\": \"completed\"\n}"
            }
          ]
        },
        {
          "name": "Error Examples",
          "item": [
            {
              "name": "Unauthorized Request",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/audit",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "audit"]
                },
                "description": "Example of request without authentication"
              },
              "response": [
                {
                  "name": "401 Unauthorized",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{base_url}}/api/v1/audit",
                      "host": ["{{base_url}}"],
                      "path": ["api", "v1", "audit"]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Missing or invalid authentication token\",\n  \"code\": 401\n}"
                }
              ]
            },
            {
              "name": "Invalid Request Body",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-API-Key",
                    "value": "{{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"tenant_id\": \"\",\n  \"user_id\": \"user-456\",\n  \"resource\": \"users\",\n  \"event\": \"user_created\",\n  \"method\": \"INVALID_METHOD\",\n  \"ip\": \"invalid-ip\",\n  \"environment\": \"invalid_env\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/audit",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "audit"]
                },
                "description": "Example of request with validation errors"
              },
              "response": [
                {
                  "name": "400 Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "X-API-Key",
                        "value": "{{api_key}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"tenant_id\": \"\",\n  \"method\": \"INVALID_METHOD\"\n}"
                    },
                    "url": {
                      "raw": "{{base_url}}/api/v1/audit",
                      "host": ["{{base_url}}"],
                      "path": ["api", "v1", "audit"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"Invalid request body\",\n  \"message\": \"Key: 'CreateAuditLogRequest.TenantID' Error:Field validation for 'TenantID' failed on the 'required' tag\\nKey: 'CreateAuditLogRequest.Method' Error:Field validation for 'Method' failed on the 'oneof' tag\",\n  \"code\": 400\n}"
                }
              ]
            }
          ],
          "description": "Examples of error responses for troubleshooting"
        }
      ],
      "description": "Audit log management endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set dynamic variables if needed",
          "if (!pm.environment.get('base_url')) {",
          "    pm.environment.set('base_url', 'http://localhost:9025');",
          "}",
          "",
          "// Generate UUID for request tracking (optional)",
          "pm.environment.set('request_id', pm.variables.replaceIn('{{$guid}}'));",
          "",
          "// Set current timestamp",
          "pm.environment.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common test for all requests",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "// Check if response is JSON",
          "pm.test('Response is JSON', function () {",
          "    pm.response.to.have.header('Content-Type');",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Store audit log ID from create response for later use",
          "if (pm.response.code === 201 && pm.response.json().id) {",
          "    pm.environment.set('audit_log_id', pm.response.json().id);",
          "}"
        ]
      }
    }
  ]
}
